@startuml UC2-LogIn

actor "User" as User
participant "FalsoPay App" as App
participant "API Gateway" as Gateway
participant "Authentication Service" as AuthService
participant "Notification Service" as NotifService
participant "User Service" as UserService
participant "IPA Service" as IPAService
participant "Database" as DB

title UC-2: Log In

User -> App: Enter phone number
activate App

App -> Gateway: POST /api/auth/request-code
activate Gateway

Gateway -> AuthService: Request verification code
activate AuthService

AuthService -> NotifService: Generate verification code
activate NotifService
NotifService -> NotifService: Generate random code
NotifService -> NotifService: Send SMS with code
NotifService --> AuthService: Code sent
deactivate NotifService

AuthService --> Gateway: 200 OK (Code sent)
Gateway --> App: 200 OK with code
App -> App: Store verification code
App --> User: Enter verification code

User -> App: Enter verification code
App -> App: Verify entered code matches stored code

alt Invalid code
    App --> User: Display error message
else Valid code
    App -> Gateway: POST /api/auth/login
    Gateway -> AuthService: Authenticate user
    
    AuthService -> UserService: Check if user exists
    activate UserService
    
    UserService -> DB: Query user by phone
    activate DB
    DB --> UserService: User data (or null)
    deactivate DB
    
    alt User not found
        UserService --> AuthService: User not found
        AuthService --> Gateway: 404 Not Found
        Gateway --> App: 404 Not Found
        App --> User: Redirect to registration
    else User found
        UserService --> AuthService: User found
        
        AuthService -> UserService: Get user details
        UserService -> DB: Get user account status
        activate DB
        DB --> UserService: User account details
        deactivate DB
        UserService --> AuthService: User details
        deactivate UserService
        
        AuthService -> IPAService: Check for default account
        activate IPAService
        IPAService -> DB: Query default IPA account
        activate DB
        DB --> IPAService: Default account (or null)
        deactivate DB
        
        alt No default account
            IPAService --> AuthService: No default account
            AuthService -> AuthService: Generate access token
            AuthService --> Gateway: 200 OK with token
            Gateway --> App: 200 OK with token
            App -> App: Store token
            App --> User: Display dashboard
        else Has default account
            IPAService --> AuthService: Default account exists
            AuthService --> Gateway: 200 OK with prompt
            Gateway --> App: 200 OK with prompt
            App --> User: Enter IPA address for verification
            
            alt User requests account reset
                User -> App: Select "Reset Account"
                App -> Gateway: POST /api/auth/reset-account
                Gateway -> AuthService: Reset account request
                AuthService -> UserService: Mark account for reset
                UserService -> DB: Update user status
                UserService --> AuthService: Account marked for reset
                AuthService --> Gateway: 200 OK
                Gateway --> App: 200 OK
                App --> User: Redirect to registration
            else User enters IPA
                User -> App: Enter IPA address
                App -> Gateway: POST /api/auth/verify-ipa
                Gateway -> AuthService: Verify IPA
                
                AuthService -> IPAService: Verify IPA belongs to user
                IPAService -> DB: Check IPA ownership
                activate DB
                DB --> IPAService: Verification result
                deactivate DB
                
                alt Invalid IPA
                    IPAService --> AuthService: IPA verification failed
                    AuthService --> Gateway: 401 Unauthorized
                    Gateway --> App: 401 Unauthorized
                    App --> User: Display error message
                else Valid IPA
                    IPAService --> AuthService: IPA verified
                    deactivate IPAService
                    
                    AuthService -> AuthService: Generate access token
                    AuthService --> Gateway: 200 OK with token
                    deactivate AuthService
                    Gateway --> App: 200 OK with token
                    deactivate Gateway
                    
                    App -> App: Store token
                    App --> User: Display dashboard
                    deactivate App
                end
            end
        end
    end
end

@enduml 